services:
#SERVICIO DE KAFKA
  kafka:
    image: bitnami/kafka:3.5 #IMAGEN OFICIAL DE KAFKA DE BITNAMI CON SU VERSION ACTUAL
    container_name: kafka #NOMBRE DEL CONTENEDOR
    ports:
      - "9092:9092" #PUERTO PARA LAS CONEXIONES CON KAFKA
    environment:
      KAFKA_ENABLE_KRAFT: yes #PROTOCOLO NUEVO DE KAFKA QUE ELIMINA LA NECESIDAD DE USAR ZOOKEEPER
      KAFKA_CFG_NODE_ID: 1 #ID DEL NODO DE KAFKA EN EL CLUSTER ACTUAL
      KAFKA_CFG_PROCESS_ROLES: controller,broker #DEFINICION DE ROLES DEL KAFKA, MENSAJES Y TOPICS COMO BROKER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093 
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093 #PUERTOS DONDE KAFKA ESCUCHA CONEXIONES, EL 9092 PARA CUANDO QUEREMOS KAFKA COMO BROKER, Y EL 9093 CUANDO SE REQUIERE COMO CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 #DIRECCION QUE KAFKA PUBLICA CON LOS CLIENTES
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER #NOMBRE DEL LISTENER PARA LA COMUNICACION DE CONTROLADORES
      KAFKA_KRAFT_CLUSTER_ID: 'Zt65b7XQSmSREeXP1fyPIQ==' #ID DEL CLUSTER KAFKA
      ALLOW_PLAINTEXT_LISTENER: yes #PERMITE CONEXIONES SIN ENCRIPTACION


#MICROSERVICIO USUARIOS - ENCARGADO DEL REGISTRO Y DE PRODUCIR EL EVENTO A COMUNICAR A TRAVES DE KAFKA
  servicio-usuarios:
    build: ./microservicio_usuarios #CONSTRUYE LA APLICACION DE LA CARPETA MICROSERVICIO_USUARIOS DESDE EL DOCKERFILE
    ports:
      - "5000:5000" #INDICA EN QUE PUERTO SE VA EJECUTAR EL SERVICIO
    depends_on:
      - kafka #DEPENDE DE KAFKA ESTE CORRIENDO
  #MICROSERVICIO DE NOTIFICACIONES
  servicio-notificaciones: 
    build: ./microservicio_notificaciones #CONSTRUYE EL MICROSERVICIO DE NOTIFICACIONES DESDE EL DOCKERFILE
    ports:
      - "5001:5001" #INDICA EL PUERTO DE EJECUCION
    depends_on:
      - kafka #DEPENDE DE KAFKA ESTE CORRIENDO